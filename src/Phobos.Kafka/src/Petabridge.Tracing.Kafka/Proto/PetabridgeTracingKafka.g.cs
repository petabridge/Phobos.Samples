// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Petabridge.Tracing.Kafka.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Petabridge.Tracing.Kafka.Proto {

  /// <summary>Holder for reflection information generated from Petabridge.Tracing.Kafka.proto</summary>
  internal static partial class PetabridgeTracingKafkaReflection {

    #region Descriptor
    /// <summary>File descriptor for Petabridge.Tracing.Kafka.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PetabridgeTracingKafkaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5QZXRhYnJpZGdlLlRyYWNpbmcuS2Fma2EucHJvdG8SHlBldGFicmlkZ2Uu",
            "VHJhY2luZy5LYWZrYS5Qcm90byKcAQoQU3BhbkNvbnRleHRQcm90bxJVCgt0",
            "ZXh0X2Zvcm1hdBgBIAMoCzJALlBldGFicmlkZ2UuVHJhY2luZy5LYWZrYS5Q",
            "cm90by5TcGFuQ29udGV4dFByb3RvLlRleHRGb3JtYXRFbnRyeRoxCg9UZXh0",
            "Rm9ybWF0RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Petabridge.Tracing.Kafka.Proto.SpanContextProto), global::Petabridge.Tracing.Kafka.Proto.SpanContextProto.Parser, new[]{ "TextFormat" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class SpanContextProto : pb::IMessage<SpanContextProto> {
    private static readonly pb::MessageParser<SpanContextProto> _parser = new pb::MessageParser<SpanContextProto>(() => new SpanContextProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpanContextProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Petabridge.Tracing.Kafka.Proto.PetabridgeTracingKafkaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpanContextProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpanContextProto(SpanContextProto other) : this() {
      textFormat_ = other.textFormat_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpanContextProto Clone() {
      return new SpanContextProto(this);
    }

    /// <summary>Field number for the "text_format" field.</summary>
    public const int TextFormatFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_textFormat_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> textFormat_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> TextFormat {
      get { return textFormat_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpanContextProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpanContextProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!TextFormat.Equals(other.TextFormat)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= TextFormat.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      textFormat_.WriteTo(output, _map_textFormat_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += textFormat_.CalculateSize(_map_textFormat_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpanContextProto other) {
      if (other == null) {
        return;
      }
      textFormat_.Add(other.textFormat_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            textFormat_.AddEntriesFrom(input, _map_textFormat_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
